openapi: 3.0.3
info:
  title: Bookstore API
  description: A fairly simple API of a bookstore
  version: 1.0
  contact:
    name: Simply Steph
    url: simplydelivery.de
servers:
  - url: 'http://localhost:8080'
    description: Development host
  - url: 'https://api.yourdomain.com/v1'
    description: Production server
paths:
  /books:
    get:
      operationId: getAvailableBooks
      responses:
        '200':
          description: TODO
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      operationId: addBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
              example: {"title": "The Restless Death", "author": "Simon Becket", "publisher": "Bantam Press", "rating": 1}
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
  /books/{id}:
    patch:
      operationId: updateBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
              example: {"title": "The Restless Death", "author": "Simon Becket", "publisher": "Bantam Press", "rating": 5}
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request
        '404':
          description: Not Found
    get:
      operationId: getBookById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of the book
      responses:
        '200':
          description: Returns a single book
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Book'
        '404':
          description: Nothing found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteBookById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of the book
      responses:
        '204':
          description: Book has been deleted
components:
  schemas:
    Book:
      type: object
      required: [title, author, publisher, rating]
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Unfuck the Economy"
        author:
          type: string
          example: "Waldemar Zeiler"
        publisher: 
          type: string
          example: Goldmann Verlag
        rating:
          type: integer
          example: 5
    Error:
      type: object
      properties:
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Nothing Found"
        